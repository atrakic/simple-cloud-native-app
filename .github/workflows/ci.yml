name: CI Build
on:
  pull_request:
    branches:
      - main
env:
  REGISTRY: docker.io
  IMAGE_NAME: xomodo/jobsites-api

jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            maintainer=Admir Trakic <xomodo@gmail.com>
      - name: JSON output
        run: |
          echo "maintainer=${{ fromJSON(steps.meta.outputs.json).labels['maintainer'] }}"
          echo "version=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}"
          echo "revision=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}"
          echo "created=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          labels: ${{ steps.meta.outputs.labels }}
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.IMAGE_NAME }}:dev
      - name: Create a cluster
        uses: AbsaOSS/k3d-action@v2.3.0
        with:
          cluster-name: ci
          args: >-
            --config k3d.yaml
      - name: Set env vars
        run: |
          # Make the variables available in follow-up steps
          echo "PORT=5000" >> $GITHUB_ENV
          echo "APP=cloud-native-app-demo" >> $GITHUB_ENV
      - name: Deploy on k3d
        run: |
          set -x
          APP=${{ env.APP }} IMAGE=${{ env.IMAGE_NAME }}:dev PORT=${{ env.PORT }} ./scripts/deploy.sh
          set +x
      - name: Pod test
        run: |
          set -x
          export POD=$(kubectl get pods --no-headers -o custom-columns=":metadata.name" -l "app=${{ env.APP }}")
          kubectl exec -it "$POD" -- printenv
          kubectl run --rm curl-test --image radial/busyboxplus:curl -i --restart Never -- sh -c "curl -sSL --fail ${{ env.APP }}"
          set +x
